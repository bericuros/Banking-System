/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package klijent;

import java.awt.event.ItemEvent;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author pc
 */
public class Prozor extends javax.swing.JFrame {

    /**
     * Creates new form Prozor
     */
    public Prozor() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popupMenu1 = new java.awt.PopupMenu();
        panelTabbedPane = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        mestoPBLabel = new javax.swing.JLabel();
        mestoNazivLabel = new javax.swing.JLabel();
        mestoPBTextField = new javax.swing.JTextField();
        mestoNazivTextField = new javax.swing.JTextField();
        mestoPokreniButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        filijalaNazivLabel = new javax.swing.JLabel();
        filijalaAdresaLabel = new javax.swing.JLabel();
        filijalaMestoLabel = new javax.swing.JLabel();
        filijalaPokreniButton = new javax.swing.JButton();
        filijalaNazivTextField = new javax.swing.JTextField();
        filijalaAdresaTextField = new javax.swing.JTextField();
        filijalaMestoTextField = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        komitentNazivLabel = new javax.swing.JLabel();
        komitentAdresaLabel = new javax.swing.JLabel();
        komitentMestoLabel = new javax.swing.JLabel();
        komitentNazivTextField = new javax.swing.JTextField();
        komitentAdresaTextField = new javax.swing.JTextField();
        komitentMestoTextField = new javax.swing.JTextField();
        komitentPokreniButton = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        sedisteKomitentLabel = new javax.swing.JLabel();
        sedisteNovoMestoLabel = new javax.swing.JLabel();
        sedisteKomitentTextField = new javax.swing.JTextField();
        sedisteNovoMestoTextField = new javax.swing.JTextField();
        sedistePokreniButton = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        racunKomitentLabel = new javax.swing.JLabel();
        racunMestoLabel = new javax.swing.JLabel();
        racunDozvoljenMinusLabel = new javax.swing.JLabel();
        racunKomitentTextField = new javax.swing.JTextField();
        racunMestoTextField = new javax.swing.JTextField();
        racunDozvoljenMinusTextField = new javax.swing.JTextField();
        racunPokreniButton = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        racunZatRacunLabel = new javax.swing.JLabel();
        racunZatRacunTextField = new javax.swing.JTextField();
        racunZatPokreniButton = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        prenosRacunSaLabel = new javax.swing.JLabel();
        prenosRacunNaLabel = new javax.swing.JLabel();
        prenosIznosLabel = new javax.swing.JLabel();
        prenosSvrhaLabel = new javax.swing.JLabel();
        prenosRacunSaTextField = new javax.swing.JTextField();
        prenosRacunNaTextField = new javax.swing.JTextField();
        prenosIznosTextField = new javax.swing.JTextField();
        prenosSvrhaTextField = new javax.swing.JTextField();
        prenosPokreniButton = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        uplataRacunLabel = new javax.swing.JLabel();
        uplataFilijalaLabel = new javax.swing.JLabel();
        uplataIznosLabel = new javax.swing.JLabel();
        uplataRacunTextField = new javax.swing.JTextField();
        uplataFilijalaTextField = new javax.swing.JTextField();
        uplataIznosTextField = new javax.swing.JTextField();
        uplataPokreniButton = new javax.swing.JButton();
        uplataSvrhaLabel = new javax.swing.JLabel();
        uplataSvrhaTextField = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        isplataRacunLabel = new javax.swing.JLabel();
        isplataFilijalaLabel = new javax.swing.JLabel();
        isplataIznosLabel = new javax.swing.JLabel();
        isplataSvrhaLabel = new javax.swing.JLabel();
        isplataRacunTextField = new javax.swing.JTextField();
        isplataFilijalaTextField = new javax.swing.JTextField();
        isplataIznosTextField = new javax.swing.JTextField();
        isplataSvrhaTextField = new javax.swing.JTextField();
        isplataPokreniButton = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        dohvatiMestaPokreniButton = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        dohvatiFilijalePokreniButton = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        dohvatiKomitentePokreniButton = new javax.swing.JButton();
        jPanel13 = new javax.swing.JPanel();
        dohvRacunKomitentLabel = new javax.swing.JLabel();
        dohvRacunKomitentTextField = new javax.swing.JTextField();
        dohvRacunPokreniButton = new javax.swing.JButton();
        jPanel14 = new javax.swing.JPanel();
        transakcijaRacunTextField = new javax.swing.JTextField();
        transakcijaRacunLabel = new javax.swing.JLabel();
        transakcijaPokreniButton = new javax.swing.JButton();
        jPanel15 = new javax.swing.JPanel();
        kopijaPokreniButton = new javax.swing.JButton();
        jPanel16 = new javax.swing.JPanel();
        razlikePokreniButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        glavnaTextArea = new javax.swing.JTextArea();
        ocistiTekstButton = new javax.swing.JButton();

        popupMenu1.setLabel("popupMenu1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelTabbedPane.setTabPlacement(javax.swing.JTabbedPane.LEFT);

        mestoPBLabel.setText("Postanski Broj:");

        mestoNazivLabel.setText("Naziv:");

        mestoPokreniButton.setText("Pokreni");
        mestoPokreniButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mestoPokreniButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(mestoNazivLabel)
                            .addComponent(mestoPBLabel))
                        .addGap(46, 46, 46)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mestoPBTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mestoNazivTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(136, 136, 136)
                        .addComponent(mestoPokreniButton)))
                .addContainerGap(69, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mestoPBLabel)
                    .addComponent(mestoPBTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mestoNazivLabel)
                    .addComponent(mestoNazivTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addComponent(mestoPokreniButton)
                .addContainerGap(305, Short.MAX_VALUE))
        );

        panelTabbedPane.addTab("Kreiranje mesta", jPanel1);

        filijalaNazivLabel.setText("Naziv:");

        filijalaAdresaLabel.setText("Adresa:");

        filijalaMestoLabel.setText("Mesto (IdM):");

        filijalaPokreniButton.setText("Pokreni");
        filijalaPokreniButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                filijalaPokreniButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(filijalaAdresaLabel)
                            .addComponent(filijalaNazivLabel)
                            .addComponent(filijalaMestoLabel))
                        .addGap(50, 50, 50)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(filijalaAdresaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(filijalaMestoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(filijalaNazivTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(119, 119, 119)
                        .addComponent(filijalaPokreniButton)))
                .addContainerGap(48, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(filijalaNazivLabel)
                    .addComponent(filijalaNazivTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(filijalaAdresaLabel)
                    .addComponent(filijalaAdresaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(filijalaMestoLabel)
                    .addComponent(filijalaMestoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addComponent(filijalaPokreniButton)
                .addContainerGap(244, Short.MAX_VALUE))
        );

        panelTabbedPane.addTab("Kreiranje filijale", jPanel2);

        komitentNazivLabel.setText("Naziv:");

        komitentAdresaLabel.setText("Adresa:");

        komitentMestoLabel.setText("Mesto (IdM):");

        komitentPokreniButton.setText("Pokreni");
        komitentPokreniButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                komitentPokreniButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(komitentNazivLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(komitentAdresaLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(komitentMestoLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(49, 49, 49)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(komitentAdresaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(komitentNazivTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(komitentMestoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(148, 148, 148)
                        .addComponent(komitentPokreniButton)))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(komitentNazivLabel)
                    .addComponent(komitentNazivTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(komitentAdresaLabel)
                    .addComponent(komitentAdresaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(komitentMestoLabel)
                    .addComponent(komitentMestoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52)
                .addComponent(komitentPokreniButton)
                .addContainerGap(246, Short.MAX_VALUE))
        );

        panelTabbedPane.addTab("Kreiranje komitenta", jPanel3);

        sedisteKomitentLabel.setText("Komitent (IdK):");

        sedisteNovoMestoLabel.setText("Novo mesto (IdM):");

        sedistePokreniButton.setText("Pokreni");
        sedistePokreniButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sedistePokreniButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(sedisteNovoMestoLabel)
                    .addComponent(sedisteKomitentLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sedisteKomitentTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sedisteNovoMestoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(107, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(132, 132, 132)
                .addComponent(sedistePokreniButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sedisteKomitentLabel)
                    .addComponent(sedisteKomitentTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sedisteNovoMestoLabel)
                    .addComponent(sedisteNovoMestoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addComponent(sedistePokreniButton)
                .addContainerGap(301, Short.MAX_VALUE))
        );

        panelTabbedPane.addTab("Promena sedista", jPanel4);

        racunKomitentLabel.setText("Komitent (IdK):");

        racunMestoLabel.setText("Mesto (IdM):");

        racunDozvoljenMinusLabel.setText("Dozvoljen minus:");

        racunPokreniButton.setText("Pokreni");
        racunPokreniButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                racunPokreniButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(racunDozvoljenMinusLabel)
                            .addComponent(racunMestoLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(racunKomitentLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(37, 37, 37)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(racunDozvoljenMinusTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                            .addComponent(racunMestoTextField)
                            .addComponent(racunKomitentTextField)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(139, 139, 139)
                        .addComponent(racunPokreniButton)))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(racunKomitentLabel)
                    .addComponent(racunKomitentTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(racunMestoLabel)
                    .addComponent(racunMestoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(racunDozvoljenMinusLabel)
                    .addComponent(racunDozvoljenMinusTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addComponent(racunPokreniButton)
                .addContainerGap(241, Short.MAX_VALUE))
        );

        panelTabbedPane.addTab("Otvaranje racuna", jPanel5);

        racunZatRacunLabel.setText("Racun (IdR):");

        racunZatPokreniButton.setText("Pokreni");
        racunZatPokreniButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                racunZatPokreniButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(racunZatRacunLabel)
                        .addGap(38, 38, 38)
                        .addComponent(racunZatRacunTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(134, 134, 134)
                        .addComponent(racunZatPokreniButton)))
                .addContainerGap(57, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(racunZatRacunLabel)
                    .addComponent(racunZatRacunTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addComponent(racunZatPokreniButton)
                .addContainerGap(340, Short.MAX_VALUE))
        );

        panelTabbedPane.addTab("Zatvaranje racuna", jPanel6);

        prenosRacunSaLabel.setText("RacunSa (IdR):");

        prenosRacunNaLabel.setText("RacunNa (IdR):");

        prenosIznosLabel.setText("Iznos:");

        prenosSvrhaLabel.setText("Svrha:");

        prenosPokreniButton.setText("Pokreni");
        prenosPokreniButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                prenosPokreniButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(prenosSvrhaLabel)
                    .addComponent(prenosRacunNaLabel)
                    .addComponent(prenosRacunSaLabel)
                    .addComponent(prenosIznosLabel))
                .addGap(28, 28, 28)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(prenosRacunSaTextField)
                    .addComponent(prenosRacunNaTextField)
                    .addComponent(prenosIznosTextField)
                    .addComponent(prenosSvrhaTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE))
                .addGap(79, 79, 79))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(118, 118, 118)
                .addComponent(prenosPokreniButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prenosRacunSaLabel)
                    .addComponent(prenosRacunSaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prenosRacunNaLabel)
                    .addComponent(prenosRacunNaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prenosIznosLabel)
                    .addComponent(prenosIznosTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prenosSvrhaLabel)
                    .addComponent(prenosSvrhaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addComponent(prenosPokreniButton)
                .addContainerGap(214, Short.MAX_VALUE))
        );

        panelTabbedPane.addTab("Prenos novca", jPanel7);

        uplataRacunLabel.setText("Racun (IdR):");

        uplataFilijalaLabel.setText("Filijala (IdF):");

        uplataIznosLabel.setText("Iznos:");

        uplataPokreniButton.setText("Pokreni");
        uplataPokreniButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                uplataPokreniButtonMouseClicked(evt);
            }
        });

        uplataSvrhaLabel.setText("Svrha:");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(uplataFilijalaLabel)
                            .addComponent(uplataRacunLabel)
                            .addComponent(uplataIznosLabel)
                            .addComponent(uplataSvrhaLabel))
                        .addGap(43, 43, 43)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(uplataRacunTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                            .addComponent(uplataFilijalaTextField)
                            .addComponent(uplataIznosTextField)
                            .addComponent(uplataSvrhaTextField)))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(137, 137, 137)
                        .addComponent(uplataPokreniButton)))
                .addContainerGap(57, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(uplataRacunLabel)
                    .addComponent(uplataRacunTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(uplataFilijalaLabel)
                    .addComponent(uplataFilijalaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(uplataIznosLabel)
                    .addComponent(uplataIznosTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(uplataSvrhaLabel)
                    .addComponent(uplataSvrhaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addComponent(uplataPokreniButton)
                .addContainerGap(189, Short.MAX_VALUE))
        );

        panelTabbedPane.addTab("Uplata novca", jPanel8);

        isplataRacunLabel.setText("Racun (IdR):");

        isplataFilijalaLabel.setText("Filijala (IdF):");

        isplataIznosLabel.setText("Iznos:");

        isplataSvrhaLabel.setText("Svrha:");

        isplataPokreniButton.setText("Pokreni");
        isplataPokreniButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                isplataPokreniButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(isplataFilijalaLabel)
                            .addComponent(isplataRacunLabel)
                            .addComponent(isplataIznosLabel)
                            .addComponent(isplataSvrhaLabel))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(isplataFilijalaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(isplataRacunTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(isplataIznosTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(isplataSvrhaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(135, 135, 135)
                        .addComponent(isplataPokreniButton)))
                .addContainerGap(61, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(isplataRacunLabel)
                    .addComponent(isplataRacunTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(isplataFilijalaLabel)
                    .addComponent(isplataFilijalaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(isplataIznosLabel)
                    .addComponent(isplataIznosTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(isplataSvrhaLabel)
                    .addComponent(isplataSvrhaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addComponent(isplataPokreniButton)
                .addContainerGap(206, Short.MAX_VALUE))
        );

        panelTabbedPane.addTab("Isplata novca", jPanel9);

        dohvatiMestaPokreniButton.setText("Pokreni");
        dohvatiMestaPokreniButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dohvatiMestaPokreniButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(124, 124, 124)
                .addComponent(dohvatiMestaPokreniButton)
                .addContainerGap(159, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(95, 95, 95)
                .addComponent(dohvatiMestaPokreniButton)
                .addContainerGap(348, Short.MAX_VALUE))
        );

        panelTabbedPane.addTab("Dohvatanje svih mesta", jPanel10);

        dohvatiFilijalePokreniButton.setText("Pokreni");
        dohvatiFilijalePokreniButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dohvatiFilijalePokreniButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(123, 123, 123)
                .addComponent(dohvatiFilijalePokreniButton)
                .addContainerGap(160, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(95, 95, 95)
                .addComponent(dohvatiFilijalePokreniButton)
                .addContainerGap(348, Short.MAX_VALUE))
        );

        panelTabbedPane.addTab("Dohvatanje svih filijala", jPanel11);

        dohvatiKomitentePokreniButton.setText("Pokreni");
        dohvatiKomitentePokreniButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dohvatiKomitentePokreniButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(119, 119, 119)
                .addComponent(dohvatiKomitentePokreniButton)
                .addContainerGap(164, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(92, 92, 92)
                .addComponent(dohvatiKomitentePokreniButton)
                .addContainerGap(351, Short.MAX_VALUE))
        );

        panelTabbedPane.addTab("Dohvatanje svih komitenata", jPanel12);

        dohvRacunKomitentLabel.setText("Komitent (IdK):");

        dohvRacunPokreniButton.setText("Pokreni");
        dohvRacunPokreniButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dohvRacunPokreniButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(dohvRacunKomitentLabel)
                        .addGap(39, 39, 39)
                        .addComponent(dohvRacunKomitentTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addComponent(dohvRacunPokreniButton)))
                .addContainerGap(63, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dohvRacunKomitentLabel)
                    .addComponent(dohvRacunKomitentTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addComponent(dohvRacunPokreniButton)
                .addContainerGap(328, Short.MAX_VALUE))
        );

        panelTabbedPane.addTab("Dohvatanje racuna", jPanel13);

        transakcijaRacunLabel.setText("Racun (IdR):");

        transakcijaPokreniButton.setText("Pokreni");
        transakcijaPokreniButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                transakcijaPokreniButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(transakcijaRacunLabel)
                        .addGap(26, 26, 26)
                        .addComponent(transakcijaRacunTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addComponent(transakcijaPokreniButton)))
                .addContainerGap(82, Short.MAX_VALUE))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(transakcijaRacunLabel)
                    .addComponent(transakcijaRacunTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(transakcijaPokreniButton)
                .addContainerGap(353, Short.MAX_VALUE))
        );

        panelTabbedPane.addTab("Dohvatanje transakcija", jPanel14);

        kopijaPokreniButton.setText("Pokreni");
        kopijaPokreniButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                kopijaPokreniButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGap(104, 104, 104)
                .addComponent(kopijaPokreniButton)
                .addContainerGap(179, Short.MAX_VALUE))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addComponent(kopijaPokreniButton)
                .addContainerGap(359, Short.MAX_VALUE))
        );

        panelTabbedPane.addTab("Dohvati sve iz kopije", jPanel15);

        razlikePokreniButton.setText("Pokreni");
        razlikePokreniButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                razlikePokreniButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGap(110, 110, 110)
                .addComponent(razlikePokreniButton)
                .addContainerGap(173, Short.MAX_VALUE))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGap(93, 93, 93)
                .addComponent(razlikePokreniButton)
                .addContainerGap(350, Short.MAX_VALUE))
        );

        panelTabbedPane.addTab("Dohvati razlike", jPanel16);

        glavnaTextArea.setColumns(20);
        glavnaTextArea.setRows(5);
        jScrollPane2.setViewportView(glavnaTextArea);

        ocistiTekstButton.setText("Ocisti tekst");
        ocistiTekstButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ocistiTekstButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(ocistiTekstButton)
                        .addGap(106, 106, 106))
                    .addComponent(panelTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 536, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 758, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panelTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(ocistiTekstButton)
                        .addGap(0, 25, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mestoPokreniButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mestoPokreniButtonMouseClicked
        method = "POST";
        urlAddress = "http://localhost:8080/Centralni_Server/api/napravimesto";

        System.out.println(method);
        System.out.println(urlAddress);

        String inputString = null;
        int responseCode = 0;

        try {
            URL url = new URL(urlAddress);
            try {
                HttpURLConnection myHttpConnection = (HttpURLConnection) url.openConnection();

                myHttpConnection.setRequestMethod(method);

                StringBuffer queryParam = new StringBuffer();
                queryParam.append("PB=");
                if (mestoPBTextField == null || mestoPBTextField.getText().equals("")) return;
                queryParam.append(mestoPBTextField.getText());
                queryParam.append("&");
                queryParam.append("Naziv=");
                if (mestoNazivTextField == null || mestoNazivTextField.getText().equals("")) return;
                queryParam.append(mestoNazivTextField.getText());

                myHttpConnection.setDoOutput(true);

                OutputStream output = myHttpConnection.getOutputStream();
                output.write(queryParam.toString().getBytes());
                output.flush();

                responseCode = myHttpConnection.getResponseCode();

                System.out.format("Connecting to %s\nConnection Method: '%s'\nResponse Code is: %d\n", urlAddress, myHttpConnection.getRequestMethod(), responseCode);
                System.out.println("----[ URL DETAILS ]-----------------");
                System.out.println("URL Protocol....: " + url.getProtocol());
                System.out.println("URL Host........: " + url.getHost());
                System.out.println("URL Port........: " + url.getPort());
                System.out.println("URL Authority...: " + url.getAuthority());
                System.out.println("URL Path........: " + url.getPath());
                System.out.println("URL User Info...: " + url.getUserInfo());
                System.out.println("URL Query Info..: " + url.getQuery());

                System.out.println("----[ OUTPUT BELOW ]-----------------------------------------------------------------");

                BufferedReader in = new BufferedReader(new InputStreamReader(myHttpConnection.getInputStream()));
                while ((inputString = in.readLine()) != null) {
                    glavnaTextArea.setText(glavnaTextArea.getText() + inputString + "\n");
                    System.out.println(inputString);
                }
                in.close();
                System.out.println("-------------------------------------------------------------------------------------");

            } catch (IOException ex) {
                Logger.getLogger(Prozor.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (MalformedURLException ex) {
            Logger.getLogger(Prozor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_mestoPokreniButtonMouseClicked

    private void ocistiTekstButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ocistiTekstButtonMouseClicked
        glavnaTextArea.setText("");
    }//GEN-LAST:event_ocistiTekstButtonMouseClicked

    private void komitentPokreniButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_komitentPokreniButtonMouseClicked
        method = "POST";
        urlAddress = "http://localhost:8080/Centralni_Server/api/napravikomitenta";

        System.out.println(method);
        System.out.println(urlAddress);

        String inputString = null;
        int responseCode = 0;

        try {
            URL url = new URL(urlAddress);
            try {
                HttpURLConnection myHttpConnection = (HttpURLConnection) url.openConnection();

                myHttpConnection.setRequestMethod(method);

                StringBuffer queryParam = new StringBuffer();
                queryParam.append("Naziv=");
                if (komitentNazivTextField == null || komitentNazivTextField.getText().equals("")) return;
                queryParam.append(komitentNazivTextField.getText());
                queryParam.append("&");
                queryParam.append("Adresa=");
                if (komitentAdresaTextField == null || komitentAdresaTextField.getText().equals("")) return;
                queryParam.append(komitentAdresaTextField.getText());
                queryParam.append("&");
                queryParam.append("Mesto=");
                if (komitentMestoTextField == null || komitentMestoTextField.getText().equals("")) return;
                queryParam.append(komitentMestoTextField.getText());

                myHttpConnection.setDoOutput(true);

                OutputStream output = myHttpConnection.getOutputStream();
                output.write(queryParam.toString().getBytes());
                output.flush();

                responseCode = myHttpConnection.getResponseCode();

                System.out.format("Connecting to %s\nConnection Method: '%s'\nResponse Code is: %d\n", urlAddress, myHttpConnection.getRequestMethod(), responseCode);
                System.out.println("----[ URL DETAILS ]-----------------");
                System.out.println("URL Protocol....: " + url.getProtocol());
                System.out.println("URL Host........: " + url.getHost());
                System.out.println("URL Port........: " + url.getPort());
                System.out.println("URL Authority...: " + url.getAuthority());
                System.out.println("URL Path........: " + url.getPath());
                System.out.println("URL User Info...: " + url.getUserInfo());
                System.out.println("URL Query Info..: " + url.getQuery());

                System.out.println("----[ OUTPUT BELOW ]-----------------------------------------------------------------");

                BufferedReader in = new BufferedReader(new InputStreamReader(myHttpConnection.getInputStream()));
                while ((inputString = in.readLine()) != null) {
                    glavnaTextArea.setText(glavnaTextArea.getText() + inputString + "\n");
                    System.out.println(inputString);
                }
                in.close();
                System.out.println("-------------------------------------------------------------------------------------");

            } catch (IOException ex) {
                Logger.getLogger(Prozor.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (MalformedURLException ex) {
            Logger.getLogger(Prozor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_komitentPokreniButtonMouseClicked

    private void dohvatiMestaPokreniButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dohvatiMestaPokreniButtonMouseClicked
        method = "GET";
        urlAddress = "http://localhost:8080/Centralni_Server/api/dohvatimesta";

        System.out.println(method);
        System.out.println(urlAddress);

        String inputString = null;
        int responseCode = 0;

        try {
            URL url = new URL(urlAddress);
            try {
                HttpURLConnection myHttpConnection = (HttpURLConnection) url.openConnection();

                myHttpConnection.setRequestMethod(method);
                myHttpConnection.setDoOutput(false);

                responseCode = myHttpConnection.getResponseCode();

                System.out.format("Connecting to %s\nConnection Method: '%s'\nResponse Code is: %d\n", urlAddress, myHttpConnection.getRequestMethod(), responseCode);
                System.out.println("----[ URL DETAILS ]-----------------");
                System.out.println("URL Protocol....: " + url.getProtocol());
                System.out.println("URL Host........: " + url.getHost());
                System.out.println("URL Port........: " + url.getPort());
                System.out.println("URL Authority...: " + url.getAuthority());
                System.out.println("URL Path........: " + url.getPath());
                System.out.println("URL User Info...: " + url.getUserInfo());
                System.out.println("URL Query Info..: " + url.getQuery());

                System.out.println("----[ OUTPUT BELOW ]-----------------------------------------------------------------");

                BufferedReader in = new BufferedReader(new InputStreamReader(myHttpConnection.getInputStream()));
                while ((inputString = in.readLine()) != null) {
                    glavnaTextArea.setText(glavnaTextArea.getText() + inputString + "\n");
                    System.out.println(inputString);
                }
                in.close();
                System.out.println("-------------------------------------------------------------------------------------");

            } catch (IOException ex) {
                Logger.getLogger(Prozor.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (MalformedURLException ex) {
            Logger.getLogger(Prozor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_dohvatiMestaPokreniButtonMouseClicked

    private void filijalaPokreniButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_filijalaPokreniButtonMouseClicked
        method = "POST";
        urlAddress = "http://localhost:8080/Centralni_Server/api/napravifilijalu";

        System.out.println(method);
        System.out.println(urlAddress);

        String inputString = null;
        int responseCode = 0;

        try {
            URL url = new URL(urlAddress);
            try {
                HttpURLConnection myHttpConnection = (HttpURLConnection) url.openConnection();

                myHttpConnection.setRequestMethod(method);

                StringBuffer queryParam = new StringBuffer();
                queryParam.append("Naziv=");
                if (filijalaNazivTextField == null || filijalaNazivTextField.getText().equals("")) return;
                queryParam.append(filijalaNazivTextField.getText());
                queryParam.append("&");
                queryParam.append("Adresa=");
                if (filijalaAdresaTextField == null || filijalaAdresaTextField.getText().equals("")) return;
                queryParam.append(filijalaAdresaTextField.getText());
                queryParam.append("&");
                queryParam.append("Mesto=");
                if (filijalaMestoTextField == null || filijalaMestoTextField.getText().equals("")) return;
                queryParam.append(filijalaMestoTextField.getText());

                myHttpConnection.setDoOutput(true);

                OutputStream output = myHttpConnection.getOutputStream();
                output.write(queryParam.toString().getBytes());
                output.flush();

                responseCode = myHttpConnection.getResponseCode();

                System.out.format("Connecting to %s\nConnection Method: '%s'\nResponse Code is: %d\n", urlAddress, myHttpConnection.getRequestMethod(), responseCode);
                System.out.println("----[ URL DETAILS ]-----------------");
                System.out.println("URL Protocol....: " + url.getProtocol());
                System.out.println("URL Host........: " + url.getHost());
                System.out.println("URL Port........: " + url.getPort());
                System.out.println("URL Authority...: " + url.getAuthority());
                System.out.println("URL Path........: " + url.getPath());
                System.out.println("URL User Info...: " + url.getUserInfo());
                System.out.println("URL Query Info..: " + url.getQuery());

                System.out.println("----[ OUTPUT BELOW ]-----------------------------------------------------------------");

                BufferedReader in = new BufferedReader(new InputStreamReader(myHttpConnection.getInputStream()));
                while ((inputString = in.readLine()) != null) {
                    glavnaTextArea.setText(glavnaTextArea.getText() + inputString + "\n");
                    System.out.println(inputString);
                }
                in.close();
                System.out.println("-------------------------------------------------------------------------------------");

            } catch (IOException ex) {
                Logger.getLogger(Prozor.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (MalformedURLException ex) {
            Logger.getLogger(Prozor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_filijalaPokreniButtonMouseClicked

    private void dohvatiFilijalePokreniButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dohvatiFilijalePokreniButtonMouseClicked
        method = "GET";
        urlAddress = "http://localhost:8080/Centralni_Server/api/dohvatifilijale";

        System.out.println(method);
        System.out.println(urlAddress);

        String inputString = null;
        int responseCode = 0;

        try {
            URL url = new URL(urlAddress);
            try {
                HttpURLConnection myHttpConnection = (HttpURLConnection) url.openConnection();

                myHttpConnection.setRequestMethod(method);
                myHttpConnection.setDoOutput(false);

                responseCode = myHttpConnection.getResponseCode();

                System.out.format("Connecting to %s\nConnection Method: '%s'\nResponse Code is: %d\n", urlAddress, myHttpConnection.getRequestMethod(), responseCode);
                System.out.println("----[ URL DETAILS ]-----------------");
                System.out.println("URL Protocol....: " + url.getProtocol());
                System.out.println("URL Host........: " + url.getHost());
                System.out.println("URL Port........: " + url.getPort());
                System.out.println("URL Authority...: " + url.getAuthority());
                System.out.println("URL Path........: " + url.getPath());
                System.out.println("URL User Info...: " + url.getUserInfo());
                System.out.println("URL Query Info..: " + url.getQuery());

                System.out.println("----[ OUTPUT BELOW ]-----------------------------------------------------------------");

                BufferedReader in = new BufferedReader(new InputStreamReader(myHttpConnection.getInputStream()));
                while ((inputString = in.readLine()) != null) {
                    glavnaTextArea.setText(glavnaTextArea.getText() + inputString + "\n");
                    System.out.println(inputString);
                }
                in.close();
                System.out.println("-------------------------------------------------------------------------------------");

            } catch (IOException ex) {
                Logger.getLogger(Prozor.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (MalformedURLException ex) {
            Logger.getLogger(Prozor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_dohvatiFilijalePokreniButtonMouseClicked

    private void dohvatiKomitentePokreniButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dohvatiKomitentePokreniButtonMouseClicked
        method = "GET";
        urlAddress = "http://localhost:8080/Centralni_Server/api/dohvatikomitente";

        System.out.println(method);
        System.out.println(urlAddress);

        String inputString = null;
        int responseCode = 0;

        try {
            URL url = new URL(urlAddress);
            try {
                HttpURLConnection myHttpConnection = (HttpURLConnection) url.openConnection();

                myHttpConnection.setRequestMethod(method);
                myHttpConnection.setDoOutput(false);

                responseCode = myHttpConnection.getResponseCode();

                System.out.format("Connecting to %s\nConnection Method: '%s'\nResponse Code is: %d\n", urlAddress, myHttpConnection.getRequestMethod(), responseCode);
                System.out.println("----[ URL DETAILS ]-----------------");
                System.out.println("URL Protocol....: " + url.getProtocol());
                System.out.println("URL Host........: " + url.getHost());
                System.out.println("URL Port........: " + url.getPort());
                System.out.println("URL Authority...: " + url.getAuthority());
                System.out.println("URL Path........: " + url.getPath());
                System.out.println("URL User Info...: " + url.getUserInfo());
                System.out.println("URL Query Info..: " + url.getQuery());

                System.out.println("----[ OUTPUT BELOW ]-----------------------------------------------------------------");

                BufferedReader in = new BufferedReader(new InputStreamReader(myHttpConnection.getInputStream()));
                while ((inputString = in.readLine()) != null) {
                    glavnaTextArea.setText(glavnaTextArea.getText() + inputString + "\n");
                    System.out.println(inputString);
                }
                in.close();
                System.out.println("-------------------------------------------------------------------------------------");

            } catch (IOException ex) {
                Logger.getLogger(Prozor.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (MalformedURLException ex) {
            Logger.getLogger(Prozor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_dohvatiKomitentePokreniButtonMouseClicked

    private void sedistePokreniButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sedistePokreniButtonMouseClicked
        method = "POST";
        urlAddress = "http://localhost:8080/Centralni_Server/api/promenasedista";

        System.out.println(method);
        System.out.println(urlAddress);

        String inputString = null;
        int responseCode = 0;

        try {
            URL url = new URL(urlAddress);
            try {
                HttpURLConnection myHttpConnection = (HttpURLConnection) url.openConnection();

                myHttpConnection.setRequestMethod(method);

                StringBuffer queryParam = new StringBuffer();
                queryParam.append("Komitent=");
                if (sedisteKomitentTextField == null || sedisteKomitentTextField.getText().equals("")) return;
                queryParam.append(sedisteKomitentTextField.getText());
                queryParam.append("&");
                queryParam.append("Mesto=");
                if (sedisteNovoMestoTextField == null || sedisteNovoMestoTextField.getText().equals("")) return;
                queryParam.append(sedisteNovoMestoTextField.getText());

                myHttpConnection.setDoOutput(true);
                
                OutputStream output = myHttpConnection.getOutputStream();
                output.write(queryParam.toString().getBytes());
                output.flush();

                responseCode = myHttpConnection.getResponseCode();

                System.out.format("Connecting to %s\nConnection Method: '%s'\nResponse Code is: %d\n", urlAddress, myHttpConnection.getRequestMethod(), responseCode);
                System.out.println("----[ URL DETAILS ]-----------------");
                System.out.println("URL Protocol....: " + url.getProtocol());
                System.out.println("URL Host........: " + url.getHost());
                System.out.println("URL Port........: " + url.getPort());
                System.out.println("URL Authority...: " + url.getAuthority());
                System.out.println("URL Path........: " + url.getPath());
                System.out.println("URL User Info...: " + url.getUserInfo());
                System.out.println("URL Query Info..: " + url.getQuery());

                System.out.println("----[ OUTPUT BELOW ]-----------------------------------------------------------------");

                BufferedReader in = new BufferedReader(new InputStreamReader(myHttpConnection.getInputStream()));
                while ((inputString = in.readLine()) != null) {
                    glavnaTextArea.setText(glavnaTextArea.getText() + inputString + "\n");
                    System.out.println(inputString);
                }
                in.close();
                System.out.println("-------------------------------------------------------------------------------------");

            } catch (IOException ex) {
                Logger.getLogger(Prozor.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (MalformedURLException ex) {
            Logger.getLogger(Prozor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_sedistePokreniButtonMouseClicked

    private void racunPokreniButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_racunPokreniButtonMouseClicked
        method = "POST";
        urlAddress = "http://localhost:8080/Centralni_Server/api/otvaranjeracuna";

        System.out.println(method);
        System.out.println(urlAddress);

        String inputString = null;
        int responseCode = 0;

        try {
            URL url = new URL(urlAddress);
            try {
                HttpURLConnection myHttpConnection = (HttpURLConnection) url.openConnection();

                myHttpConnection.setRequestMethod(method);

                StringBuffer queryParam = new StringBuffer();
                queryParam.append("Komitent=");
                if (racunKomitentTextField == null || racunKomitentTextField.getText().equals("")) return;
                queryParam.append(racunKomitentTextField.getText());
                queryParam.append("&");
                queryParam.append("Mesto=");
                if (racunMestoTextField == null || racunMestoTextField.getText().equals("")) return;
                queryParam.append(racunMestoTextField.getText());
                queryParam.append("&");
                queryParam.append("DozvoljenMinus=");
                if (racunDozvoljenMinusTextField == null || racunDozvoljenMinusTextField.getText().equals("")) return;
                queryParam.append(racunDozvoljenMinusTextField.getText());

                myHttpConnection.setDoOutput(true);

                OutputStream output = myHttpConnection.getOutputStream();
                output.write(queryParam.toString().getBytes());
                output.flush();

                responseCode = myHttpConnection.getResponseCode();

                System.out.format("Connecting to %s\nConnection Method: '%s'\nResponse Code is: %d\n", urlAddress, myHttpConnection.getRequestMethod(), responseCode);
                System.out.println("----[ URL DETAILS ]-----------------");
                System.out.println("URL Protocol....: " + url.getProtocol());
                System.out.println("URL Host........: " + url.getHost());
                System.out.println("URL Port........: " + url.getPort());
                System.out.println("URL Authority...: " + url.getAuthority());
                System.out.println("URL Path........: " + url.getPath());
                System.out.println("URL User Info...: " + url.getUserInfo());
                System.out.println("URL Query Info..: " + url.getQuery());

                System.out.println("----[ OUTPUT BELOW ]-----------------------------------------------------------------");

                BufferedReader in = new BufferedReader(new InputStreamReader(myHttpConnection.getInputStream()));
                while ((inputString = in.readLine()) != null) {
                    glavnaTextArea.setText(glavnaTextArea.getText() + inputString + "\n");
                    System.out.println(inputString);
                }
                in.close();
                System.out.println("-------------------------------------------------------------------------------------");

            } catch (IOException ex) {
                Logger.getLogger(Prozor.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (MalformedURLException ex) {
            Logger.getLogger(Prozor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_racunPokreniButtonMouseClicked

    private void racunZatPokreniButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_racunZatPokreniButtonMouseClicked
        method = "POST";
        urlAddress = "http://localhost:8080/Centralni_Server/api/zatvaranjeracuna";

        System.out.println(method);
        System.out.println(urlAddress);

        String inputString = null;
        int responseCode = 0;

        try {
            URL url = new URL(urlAddress);
            try {
                HttpURLConnection myHttpConnection = (HttpURLConnection) url.openConnection();

                myHttpConnection.setRequestMethod(method);

                StringBuffer queryParam = new StringBuffer();
                queryParam.append("Racun=");
                if (racunZatRacunTextField == null || racunZatRacunTextField.getText().equals("")) return;
                queryParam.append(racunZatRacunTextField.getText());

                myHttpConnection.setDoOutput(true);

                OutputStream output = myHttpConnection.getOutputStream();
                output.write(queryParam.toString().getBytes());
                output.flush();

                responseCode = myHttpConnection.getResponseCode();

                System.out.format("Connecting to %s\nConnection Method: '%s'\nResponse Code is: %d\n", urlAddress, myHttpConnection.getRequestMethod(), responseCode);
                System.out.println("----[ URL DETAILS ]-----------------");
                System.out.println("URL Protocol....: " + url.getProtocol());
                System.out.println("URL Host........: " + url.getHost());
                System.out.println("URL Port........: " + url.getPort());
                System.out.println("URL Authority...: " + url.getAuthority());
                System.out.println("URL Path........: " + url.getPath());
                System.out.println("URL User Info...: " + url.getUserInfo());
                System.out.println("URL Query Info..: " + url.getQuery());

                System.out.println("----[ OUTPUT BELOW ]-----------------------------------------------------------------");

                BufferedReader in = new BufferedReader(new InputStreamReader(myHttpConnection.getInputStream()));
                while ((inputString = in.readLine()) != null) {
                    glavnaTextArea.setText(glavnaTextArea.getText() + inputString + "\n");
                    System.out.println(inputString);
                }
                in.close();
                System.out.println("-------------------------------------------------------------------------------------");

            } catch (IOException ex) {
                Logger.getLogger(Prozor.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (MalformedURLException ex) {
            Logger.getLogger(Prozor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_racunZatPokreniButtonMouseClicked

    private void dohvRacunPokreniButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dohvRacunPokreniButtonMouseClicked
        method = "GET";
        if (dohvRacunKomitentTextField == null || dohvRacunKomitentTextField.getText().equals("")) return;
        urlAddress = "http://localhost:8080/Centralni_Server/api/dohvatiracun/" + dohvRacunKomitentTextField.getText();

        System.out.println(method);
        System.out.println(urlAddress);

        String inputString = null;
        int responseCode = 0;

        try {
            URL url = new URL(urlAddress);
            try {
                HttpURLConnection myHttpConnection = (HttpURLConnection) url.openConnection();

                myHttpConnection.setRequestMethod(method);
                myHttpConnection.setDoOutput(false);
                
                responseCode = myHttpConnection.getResponseCode();

                System.out.format("Connecting to %s\nConnection Method: '%s'\nResponse Code is: %d\n", urlAddress, myHttpConnection.getRequestMethod(), responseCode);
                System.out.println("----[ URL DETAILS ]-----------------");
                System.out.println("URL Protocol....: " + url.getProtocol());
                System.out.println("URL Host........: " + url.getHost());
                System.out.println("URL Port........: " + url.getPort());
                System.out.println("URL Authority...: " + url.getAuthority());
                System.out.println("URL Path........: " + url.getPath());
                System.out.println("URL User Info...: " + url.getUserInfo());
                System.out.println("URL Query Info..: " + url.getQuery());

                System.out.println("----[ OUTPUT BELOW ]-----------------------------------------------------------------");

                BufferedReader in = new BufferedReader(new InputStreamReader(myHttpConnection.getInputStream()));
                while ((inputString = in.readLine()) != null) {
                    glavnaTextArea.setText(glavnaTextArea.getText() + inputString + "\n");
                    System.out.println(inputString);
                }
                in.close();
                System.out.println("-------------------------------------------------------------------------------------");

            } catch (IOException ex) {
                Logger.getLogger(Prozor.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (MalformedURLException ex) {
            Logger.getLogger(Prozor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_dohvRacunPokreniButtonMouseClicked

    private void uplataPokreniButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_uplataPokreniButtonMouseClicked
        method = "POST";
        urlAddress = "http://localhost:8080/Centralni_Server/api/uplatanovca";

        System.out.println(method);
        System.out.println(urlAddress);

        String inputString = null;
        int responseCode = 0;

        try {
            URL url = new URL(urlAddress);
            try {
                HttpURLConnection myHttpConnection = (HttpURLConnection) url.openConnection();

                myHttpConnection.setRequestMethod(method);

                StringBuffer queryParam = new StringBuffer();
                queryParam.append("Racun=");
                if (uplataRacunTextField == null || uplataRacunTextField.getText().equals("")) return;
                queryParam.append(uplataRacunTextField.getText());
                queryParam.append("&");
                queryParam.append("Filijala=");
                if (uplataFilijalaTextField == null || uplataFilijalaTextField.getText().equals("")) return;
                queryParam.append(uplataFilijalaTextField.getText());
                queryParam.append("&");
                queryParam.append("Iznos=");
                if (uplataIznosTextField == null || uplataIznosTextField.getText().equals("")) return;
                queryParam.append(uplataIznosTextField.getText());
                queryParam.append("&");
                queryParam.append("Svrha=");
                if (uplataSvrhaTextField == null || uplataSvrhaTextField.getText().equals("")) return;
                queryParam.append(uplataSvrhaTextField.getText());

                myHttpConnection.setDoOutput(true);

                OutputStream output = myHttpConnection.getOutputStream();
                output.write(queryParam.toString().getBytes());
                output.flush();

                responseCode = myHttpConnection.getResponseCode();

                System.out.format("Connecting to %s\nConnection Method: '%s'\nResponse Code is: %d\n", urlAddress, myHttpConnection.getRequestMethod(), responseCode);
                System.out.println("----[ URL DETAILS ]-----------------");
                System.out.println("URL Protocol....: " + url.getProtocol());
                System.out.println("URL Host........: " + url.getHost());
                System.out.println("URL Port........: " + url.getPort());
                System.out.println("URL Authority...: " + url.getAuthority());
                System.out.println("URL Path........: " + url.getPath());
                System.out.println("URL User Info...: " + url.getUserInfo());
                System.out.println("URL Query Info..: " + url.getQuery());

                System.out.println("----[ OUTPUT BELOW ]-----------------------------------------------------------------");

                BufferedReader in = new BufferedReader(new InputStreamReader(myHttpConnection.getInputStream()));
                while ((inputString = in.readLine()) != null) {
                    glavnaTextArea.setText(glavnaTextArea.getText() + inputString + "\n");
                    System.out.println(inputString);
                }
                in.close();
                System.out.println("-------------------------------------------------------------------------------------");

            } catch (IOException ex) {
                Logger.getLogger(Prozor.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (MalformedURLException ex) {
            Logger.getLogger(Prozor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_uplataPokreniButtonMouseClicked

    private void isplataPokreniButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_isplataPokreniButtonMouseClicked
        method = "POST";
        urlAddress = "http://localhost:8080/Centralni_Server/api/isplatanovca";

        System.out.println(method);
        System.out.println(urlAddress);

        String inputString = null;
        int responseCode = 0;

        try {
            URL url = new URL(urlAddress);
            try {
                HttpURLConnection myHttpConnection = (HttpURLConnection) url.openConnection();

                myHttpConnection.setRequestMethod(method);

                StringBuffer queryParam = new StringBuffer();
                queryParam.append("Racun=");
                if (isplataRacunTextField == null || isplataRacunTextField.getText().equals("")) return;
                queryParam.append(isplataRacunTextField.getText());
                queryParam.append("&");
                queryParam.append("Filijala=");
                if (isplataFilijalaTextField == null || isplataFilijalaTextField.getText().equals("")) return;
                queryParam.append(isplataFilijalaTextField.getText());
                queryParam.append("&");
                queryParam.append("Iznos=");
                if (isplataIznosTextField == null || isplataIznosTextField.getText().equals("")) return;
                queryParam.append(isplataIznosTextField.getText());
                queryParam.append("&");
                queryParam.append("Svrha=");
                if (isplataSvrhaTextField == null || isplataSvrhaTextField.getText().equals("")) return;
                queryParam.append(isplataSvrhaTextField.getText());

                myHttpConnection.setDoOutput(true);

                OutputStream output = myHttpConnection.getOutputStream();
                output.write(queryParam.toString().getBytes());
                output.flush();

                responseCode = myHttpConnection.getResponseCode();

                System.out.format("Connecting to %s\nConnection Method: '%s'\nResponse Code is: %d\n", urlAddress, myHttpConnection.getRequestMethod(), responseCode);
                System.out.println("----[ URL DETAILS ]-----------------");
                System.out.println("URL Protocol....: " + url.getProtocol());
                System.out.println("URL Host........: " + url.getHost());
                System.out.println("URL Port........: " + url.getPort());
                System.out.println("URL Authority...: " + url.getAuthority());
                System.out.println("URL Path........: " + url.getPath());
                System.out.println("URL User Info...: " + url.getUserInfo());
                System.out.println("URL Query Info..: " + url.getQuery());

                System.out.println("----[ OUTPUT BELOW ]-----------------------------------------------------------------");

                BufferedReader in = new BufferedReader(new InputStreamReader(myHttpConnection.getInputStream()));
                while ((inputString = in.readLine()) != null) {
                    glavnaTextArea.setText(glavnaTextArea.getText() + inputString + "\n");
                    System.out.println(inputString);
                }
                in.close();
                System.out.println("-------------------------------------------------------------------------------------");

            } catch (IOException ex) {
                Logger.getLogger(Prozor.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (MalformedURLException ex) {
            Logger.getLogger(Prozor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_isplataPokreniButtonMouseClicked

    private void prenosPokreniButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_prenosPokreniButtonMouseClicked
        method = "POST";
        urlAddress = "http://localhost:8080/Centralni_Server/api/prenosnovca";

        System.out.println(method);
        System.out.println(urlAddress);

        String inputString = null;
        int responseCode = 0;

        try {
            URL url = new URL(urlAddress);
            try {
                HttpURLConnection myHttpConnection = (HttpURLConnection) url.openConnection();

                myHttpConnection.setRequestMethod(method);

                StringBuffer queryParam = new StringBuffer();
                queryParam.append("RacunSa=");
                if (prenosRacunSaTextField == null || prenosRacunSaTextField.getText().equals("")) return;
                queryParam.append(prenosRacunSaTextField.getText());
                queryParam.append("&");
                queryParam.append("RacunNa=");
                if (prenosRacunNaTextField == null || prenosRacunNaTextField.getText().equals("")) return;
                queryParam.append(prenosRacunNaTextField.getText());
                queryParam.append("&");
                queryParam.append("Iznos=");
                if (prenosIznosTextField == null || prenosIznosTextField.getText().equals("")) return;
                queryParam.append(prenosIznosTextField.getText());
                queryParam.append("&");
                queryParam.append("Svrha=");
                if (prenosSvrhaTextField == null || prenosSvrhaTextField.getText().equals("")) return;
                queryParam.append(prenosSvrhaTextField.getText());

                myHttpConnection.setDoOutput(true);

                OutputStream output = myHttpConnection.getOutputStream();
                output.write(queryParam.toString().getBytes());
                output.flush();

                responseCode = myHttpConnection.getResponseCode();

                System.out.format("Connecting to %s\nConnection Method: '%s'\nResponse Code is: %d\n", urlAddress, myHttpConnection.getRequestMethod(), responseCode);
                System.out.println("----[ URL DETAILS ]-----------------");
                System.out.println("URL Protocol....: " + url.getProtocol());
                System.out.println("URL Host........: " + url.getHost());
                System.out.println("URL Port........: " + url.getPort());
                System.out.println("URL Authority...: " + url.getAuthority());
                System.out.println("URL Path........: " + url.getPath());
                System.out.println("URL User Info...: " + url.getUserInfo());
                System.out.println("URL Query Info..: " + url.getQuery());

                System.out.println("----[ OUTPUT BELOW ]-----------------------------------------------------------------");

                BufferedReader in = new BufferedReader(new InputStreamReader(myHttpConnection.getInputStream()));
                while ((inputString = in.readLine()) != null) {
                    glavnaTextArea.setText(glavnaTextArea.getText() + inputString + "\n");
                    System.out.println(inputString);
                }
                in.close();
                System.out.println("-------------------------------------------------------------------------------------");

            } catch (IOException ex) {
                Logger.getLogger(Prozor.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (MalformedURLException ex) {
            Logger.getLogger(Prozor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_prenosPokreniButtonMouseClicked

    private void transakcijaPokreniButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_transakcijaPokreniButtonMouseClicked
        method = "GET";
        if (transakcijaRacunTextField == null || transakcijaRacunTextField.getText().equals("")) return;
        urlAddress = "http://localhost:8080/Centralni_Server/api/dohvatitransakciju/" + transakcijaRacunTextField.getText();

        System.out.println(method);
        System.out.println(urlAddress);

        String inputString = null;
        int responseCode = 0;

        try {
            URL url = new URL(urlAddress);
            try {
                HttpURLConnection myHttpConnection = (HttpURLConnection) url.openConnection();

                myHttpConnection.setRequestMethod(method);
                myHttpConnection.setDoOutput(false);
                
                responseCode = myHttpConnection.getResponseCode();

                System.out.format("Connecting to %s\nConnection Method: '%s'\nResponse Code is: %d\n", urlAddress, myHttpConnection.getRequestMethod(), responseCode);
                System.out.println("----[ URL DETAILS ]-----------------");
                System.out.println("URL Protocol....: " + url.getProtocol());
                System.out.println("URL Host........: " + url.getHost());
                System.out.println("URL Port........: " + url.getPort());
                System.out.println("URL Authority...: " + url.getAuthority());
                System.out.println("URL Path........: " + url.getPath());
                System.out.println("URL User Info...: " + url.getUserInfo());
                System.out.println("URL Query Info..: " + url.getQuery());

                System.out.println("----[ OUTPUT BELOW ]-----------------------------------------------------------------");

                BufferedReader in = new BufferedReader(new InputStreamReader(myHttpConnection.getInputStream()));
                while ((inputString = in.readLine()) != null) {
                    glavnaTextArea.setText(glavnaTextArea.getText() + inputString + "\n");
                    System.out.println(inputString);
                }
                in.close();
                System.out.println("-------------------------------------------------------------------------------------");

            } catch (IOException ex) {
                Logger.getLogger(Prozor.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (MalformedURLException ex) {
            Logger.getLogger(Prozor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_transakcijaPokreniButtonMouseClicked

    private void kopijaPokreniButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_kopijaPokreniButtonMouseClicked
        method = "GET";
        urlAddress = "http://localhost:8080/Centralni_Server/api/dohvatikopiju";

        System.out.println(method);
        System.out.println(urlAddress);

        String inputString = null;
        int responseCode = 0;

        try {
            URL url = new URL(urlAddress);
            try {
                HttpURLConnection myHttpConnection = (HttpURLConnection) url.openConnection();

                myHttpConnection.setRequestMethod(method);
                myHttpConnection.setDoOutput(false);

                responseCode = myHttpConnection.getResponseCode();

                System.out.format("Connecting to %s\nConnection Method: '%s'\nResponse Code is: %d\n", urlAddress, myHttpConnection.getRequestMethod(), responseCode);
                System.out.println("----[ URL DETAILS ]-----------------");
                System.out.println("URL Protocol....: " + url.getProtocol());
                System.out.println("URL Host........: " + url.getHost());
                System.out.println("URL Port........: " + url.getPort());
                System.out.println("URL Authority...: " + url.getAuthority());
                System.out.println("URL Path........: " + url.getPath());
                System.out.println("URL User Info...: " + url.getUserInfo());
                System.out.println("URL Query Info..: " + url.getQuery());

                System.out.println("----[ OUTPUT BELOW ]-----------------------------------------------------------------");

                BufferedReader in = new BufferedReader(new InputStreamReader(myHttpConnection.getInputStream()));
                while ((inputString = in.readLine()) != null) {
                    glavnaTextArea.setText(glavnaTextArea.getText() + inputString + "\n");
                    System.out.println(inputString);
                }
                in.close();
                System.out.println("-------------------------------------------------------------------------------------");

            } catch (IOException ex) {
                Logger.getLogger(Prozor.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (MalformedURLException ex) {
            Logger.getLogger(Prozor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_kopijaPokreniButtonMouseClicked

    private void razlikePokreniButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_razlikePokreniButtonMouseClicked
        method = "GET";
        urlAddress = "http://localhost:8080/Centralni_Server/api/dohvatirazlike";

        System.out.println(method);
        System.out.println(urlAddress);

        String inputString = null;
        int responseCode = 0;

        try {
            URL url = new URL(urlAddress);
            try {
                HttpURLConnection myHttpConnection = (HttpURLConnection) url.openConnection();

                myHttpConnection.setRequestMethod(method);
                myHttpConnection.setDoOutput(false);

                responseCode = myHttpConnection.getResponseCode();

                System.out.format("Connecting to %s\nConnection Method: '%s'\nResponse Code is: %d\n", urlAddress, myHttpConnection.getRequestMethod(), responseCode);
                System.out.println("----[ URL DETAILS ]-----------------");
                System.out.println("URL Protocol....: " + url.getProtocol());
                System.out.println("URL Host........: " + url.getHost());
                System.out.println("URL Port........: " + url.getPort());
                System.out.println("URL Authority...: " + url.getAuthority());
                System.out.println("URL Path........: " + url.getPath());
                System.out.println("URL User Info...: " + url.getUserInfo());
                System.out.println("URL Query Info..: " + url.getQuery());

                System.out.println("----[ OUTPUT BELOW ]-----------------------------------------------------------------");

                BufferedReader in = new BufferedReader(new InputStreamReader(myHttpConnection.getInputStream()));
                while ((inputString = in.readLine()) != null) {
                    glavnaTextArea.setText(glavnaTextArea.getText() + inputString + "\n");
                    System.out.println(inputString);
                }
                in.close();
                System.out.println("-------------------------------------------------------------------------------------");

            } catch (IOException ex) {
                Logger.getLogger(Prozor.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (MalformedURLException ex) {
            Logger.getLogger(Prozor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_razlikePokreniButtonMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Prozor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Prozor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Prozor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Prozor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Prozor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel dohvRacunKomitentLabel;
    private javax.swing.JTextField dohvRacunKomitentTextField;
    private javax.swing.JButton dohvRacunPokreniButton;
    private javax.swing.JButton dohvatiFilijalePokreniButton;
    private javax.swing.JButton dohvatiKomitentePokreniButton;
    private javax.swing.JButton dohvatiMestaPokreniButton;
    private javax.swing.JLabel filijalaAdresaLabel;
    private javax.swing.JTextField filijalaAdresaTextField;
    private javax.swing.JLabel filijalaMestoLabel;
    private javax.swing.JTextField filijalaMestoTextField;
    private javax.swing.JLabel filijalaNazivLabel;
    private javax.swing.JTextField filijalaNazivTextField;
    private javax.swing.JButton filijalaPokreniButton;
    private javax.swing.JTextArea glavnaTextArea;
    private javax.swing.JLabel isplataFilijalaLabel;
    private javax.swing.JTextField isplataFilijalaTextField;
    private javax.swing.JLabel isplataIznosLabel;
    private javax.swing.JTextField isplataIznosTextField;
    private javax.swing.JButton isplataPokreniButton;
    private javax.swing.JLabel isplataRacunLabel;
    private javax.swing.JTextField isplataRacunTextField;
    private javax.swing.JLabel isplataSvrhaLabel;
    private javax.swing.JTextField isplataSvrhaTextField;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel komitentAdresaLabel;
    private javax.swing.JTextField komitentAdresaTextField;
    private javax.swing.JLabel komitentMestoLabel;
    private javax.swing.JTextField komitentMestoTextField;
    private javax.swing.JLabel komitentNazivLabel;
    private javax.swing.JTextField komitentNazivTextField;
    private javax.swing.JButton komitentPokreniButton;
    private javax.swing.JButton kopijaPokreniButton;
    private javax.swing.JLabel mestoNazivLabel;
    private javax.swing.JTextField mestoNazivTextField;
    private javax.swing.JLabel mestoPBLabel;
    private javax.swing.JTextField mestoPBTextField;
    private javax.swing.JButton mestoPokreniButton;
    private javax.swing.JButton ocistiTekstButton;
    private javax.swing.JTabbedPane panelTabbedPane;
    private java.awt.PopupMenu popupMenu1;
    private javax.swing.JLabel prenosIznosLabel;
    private javax.swing.JTextField prenosIznosTextField;
    private javax.swing.JButton prenosPokreniButton;
    private javax.swing.JLabel prenosRacunNaLabel;
    private javax.swing.JTextField prenosRacunNaTextField;
    private javax.swing.JLabel prenosRacunSaLabel;
    private javax.swing.JTextField prenosRacunSaTextField;
    private javax.swing.JLabel prenosSvrhaLabel;
    private javax.swing.JTextField prenosSvrhaTextField;
    private javax.swing.JLabel racunDozvoljenMinusLabel;
    private javax.swing.JTextField racunDozvoljenMinusTextField;
    private javax.swing.JLabel racunKomitentLabel;
    private javax.swing.JTextField racunKomitentTextField;
    private javax.swing.JLabel racunMestoLabel;
    private javax.swing.JTextField racunMestoTextField;
    private javax.swing.JButton racunPokreniButton;
    private javax.swing.JButton racunZatPokreniButton;
    private javax.swing.JLabel racunZatRacunLabel;
    private javax.swing.JTextField racunZatRacunTextField;
    private javax.swing.JButton razlikePokreniButton;
    private javax.swing.JLabel sedisteKomitentLabel;
    private javax.swing.JTextField sedisteKomitentTextField;
    private javax.swing.JLabel sedisteNovoMestoLabel;
    private javax.swing.JTextField sedisteNovoMestoTextField;
    private javax.swing.JButton sedistePokreniButton;
    private javax.swing.JButton transakcijaPokreniButton;
    private javax.swing.JLabel transakcijaRacunLabel;
    private javax.swing.JTextField transakcijaRacunTextField;
    private javax.swing.JLabel uplataFilijalaLabel;
    private javax.swing.JTextField uplataFilijalaTextField;
    private javax.swing.JLabel uplataIznosLabel;
    private javax.swing.JTextField uplataIznosTextField;
    private javax.swing.JButton uplataPokreniButton;
    private javax.swing.JLabel uplataRacunLabel;
    private javax.swing.JTextField uplataRacunTextField;
    private javax.swing.JLabel uplataSvrhaLabel;
    private javax.swing.JTextField uplataSvrhaTextField;
    // End of variables declaration//GEN-END:variables
    private String method;
    private String urlAddress;
}
